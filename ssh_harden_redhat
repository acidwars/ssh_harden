#!/usr/bin/env bash
 
SSHD_CONFIG_FILE="/etc/ssh/sshd_config"
 
usage() {
    echo "usage: $0 [-f file_name]"
    echo "  -f      sshd config file (default /etc/ssh/sshd_config)"
    exit 1
}
 
add_hardening() {
    TMP_FILE=$(mktemp /tmp/sshd_config.tmp.XXXXX)
    cp $SSHD_CONFIG_FILE $TMP_FILE
    #remove all KexAlgorithms Ciphers MACS
    sed -i  "s/^KexAlgorithms /#KexAlgorithms /g" $TMP_FILE
    sed -i  "s/^Ciphers /#Ciphers /g" $TMP_FILE
    sed -i  "s/^MACS /#MACS /g" $TMP_FILE
    #add KexAlgorithms Ciphers MACS to the right place
    sed -i "/Protocol 2.*/a KexAlgorithms \nCiphers \nMACS " $TMP_FILE
    #do hardening
    CHECK_SSH_VERSION=`echo "$SSHD_VERSION < 6.6" | bc`
    SSHD_VERSION="$(yum list installed | grep openssh-server | awk '{print $2}' | grep -Eo '^[0-9].[0-9]')"
    if [[ $CHECK_SSH_VERSION -eq "1" ]]; then
        sed -i "s/^KexAlgorithms /KexAlgorithms diffie-hellman-group-exchange-sha256 /g" $TMP_FILE
        sed -i "s/^Ciphers /Ciphers aes256-ctr,aes192-ctr,aes128-ctr /g" $TMP_FILE
        sed -i "s/^MACS /MACS hmac-sha2-512,hmac-sha2-256 /g" $TMP_FILE
    else
        sed -i "s/^KexAlgorithms /KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256 /g" $TMP_FILE
        sed -i "s/^Ciphers /Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr /g" $TMP_FILE
        sed -i "s/^MACS /MACS hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com /g" $TMP_FILE
    fi
    #test if everything went okay and restart the sshd
    sshd -t -f $TMP_FILE
    if [[ $? -eq  0 ]]; then
        cp $TMP_FILE $SSHD_CONFIG_FILE
        rm -f $TMP_FILE
        if [ -x /usr/bin/systemctl ] ; then
            systemctl restart sshd
        else
            /etc/init.d/sshd restart
        fi
    else
        echo "Something went wrong..."
        rm -f $TMP_FILE
        exit -1
    fi
}
 
while getopts ":F:f:H:h" opt;do
    case $opt in
        F|f)
            SSHD_CONFIG_FILE=$OPTARG;;
        H|h)
            usage;;
        \?)
            usage;;
   esac
done
 
 
if [[ -f $SSHD_CONFIG_FILE ]]; then
    add_hardening
else
    echo "File $SSHD_CONFIG_FILE does not exist"
    exit -1
fi
